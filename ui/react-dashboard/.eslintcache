[{"/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/index.tsx":"1","/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/theme.tsx":"2","/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/App.tsx":"3","/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/graphql/fragments.ts":"4","/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/components/TransactionList/index.tsx":"5","/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/components/CardLoader.tsx":"6","/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/apollo/typepolicies/TransactionAuthorization.ts":"7","/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/apollo/typepolicies/Global.ts":"8","/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/components/Title.tsx":"9","/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/components/TransactionMetrics/index.tsx":"10","/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/apollo/typepolicies/Cards.ts":"11","/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/components/TransactionCategoryChart/index.tsx":"12"},{"size":1278,"mtime":1610344485295,"results":"13","hashOfConfig":"14"},{"size":396,"mtime":1610341990610,"results":"15","hashOfConfig":"14"},{"size":2342,"mtime":1610353071436,"results":"16","hashOfConfig":"14"},{"size":525,"mtime":1610343062502,"results":"17","hashOfConfig":"14"},{"size":3019,"mtime":1610344067989,"results":"18","hashOfConfig":"14"},{"size":502,"mtime":1610341990606,"results":"19","hashOfConfig":"14"},{"size":845,"mtime":1610341990606,"results":"20","hashOfConfig":"14"},{"size":366,"mtime":1610341990605,"results":"21","hashOfConfig":"14"},{"size":248,"mtime":1610343730178,"results":"22","hashOfConfig":"14"},{"size":1440,"mtime":1610344376010,"results":"23","hashOfConfig":"14"},{"size":683,"mtime":1610344451201,"results":"24","hashOfConfig":"14"},{"size":2261,"mtime":1610353120426,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},"17jkxgm",{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"33","messages":"34","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"35","messages":"36","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"37","usedDeprecatedRules":"28"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"28"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48","usedDeprecatedRules":"28"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"28"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/index.tsx",[],["54","55"],"/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/theme.tsx",[],"/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/App.tsx",["56","57"],"/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/graphql/fragments.ts",[],"/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/components/TransactionList/index.tsx",["58","59","60","61","62"],"import React, { useEffect, useState, useCallback } from \"react\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport { FixedSizeList } from \"react-window\";\nimport AutoSizer from \"react-virtualized-auto-sizer\";\nimport InfiniteLoader from \"react-window-infinite-loader\";\nimport { useQuery, gql } from \"@apollo/client\";\nimport { TransactionAuthorizationsFragment } from \"../../graphql/fragments\";\nimport CardLoader from './../CardLoader'\nimport { useBottomScrollListener } from 'react-bottom-scroll-listener';\nimport {Title} from './../Title'\ninterface TAProps {\n  createdTs: string,\n  amount: string,\n  merchantName: string,\n  merchantCategory: string,\n  isApproved: boolean\n}\n\nconst GET_TRANSACTIONS = gql`\n  query GetTransactions($limit: Int!, $offset: Int!) {\n    transactionAuthorizations(limit: $limit, offset: $offset, order_by: {createdTs: desc}) {\n      ...txAuthFields\n    }\n  }\n  ${TransactionAuthorizationsFragment}\n  `;\n\nconst TRANSACTION_LIMIT: number = 10\n\n\nconst TransactionList = () => {\n  \n  // query transactions\n  const { loading, error, data, fetchMore } = useQuery(GET_TRANSACTIONS, {\n    variables: {\n      limit: TRANSACTION_LIMIT,\n      offset: 0\n    }\n  });\n\n  if (loading) return (<CardLoader></CardLoader>)\n\n  // destructure transactions out of data\n  let { transactionAuthorizations } = data\n  \n\n  // returns a single row for a given index the list is in\n  const row = ({index, style}: any) => {\n    const ta: TAProps = transactionAuthorizations[index]\n    return (\n      <ListItem key={index} style={style}>\n        <ListItemText primary={ta.createdTs} />\n        <ListItemText primary={ta.merchantName} />\n        <ListItemText primary={ta.isApproved ? 'Approved' : 'Declined'} />\n        <ListItemText primary={ta.amount} />\n      </ListItem>\n    )\n  }\n\n  const isItemLoaded = (index: number) => {\n    return index < transactionAuthorizations.length - 1\n  };\n\n  const loadMore = () => {\n    return fetchMore({\n      variables: {\n        limit: TRANSACTION_LIMIT,\n        offset: transactionAuthorizations.length\n      }\n    })\n  }\n  // virtualized list handler for handling large number of rows\n  return (\n    <React.Fragment>\n      <Title>Transactions</Title>\n       <AutoSizer>\n         {\n          ({height, width}) => (\n            <InfiniteLoader\n            isItemLoaded={isItemLoaded}\n            itemCount={transactionAuthorizations.length}\n            loadMoreItems={loadMore}\n            threshold={1}\n          >\n            {({ onItemsRendered, ref }) => (\n              <FixedSizeList\n              ref={ref}\n              height={height - 30}\n              width={width}\n              onItemsRendered={onItemsRendered}\n              itemSize={45}\n              itemCount={transactionAuthorizations.length}>\n                {row}\n              </FixedSizeList>\n            )}\n            </InfiniteLoader>\n          )\n        }\n      </AutoSizer>\n      \n  </React.Fragment>\n  );\n}\n\nexport default TransactionList","/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/components/CardLoader.tsx",[],"/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/apollo/typepolicies/TransactionAuthorization.ts",[],"/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/apollo/typepolicies/Global.ts",[],"/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/components/Title.tsx",[],"/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/components/TransactionMetrics/index.tsx",["63","64"],"import React from 'react';\nimport Link from '@material-ui/core/Link';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Typography from '@material-ui/core/Typography';\nimport {Title} from '../Title';\nimport { useQuery, gql } from \"@apollo/client\";\nimport { TransactionAggregationFragment } from \"../../graphql/fragments\";\nimport CardLoader from '../CardLoader';\n\nconst useStyles = makeStyles({\n  depositContext: {\n    flex: 1,\n  },\n});\n\nconst GET_TRANSACTION_METRICS = gql`\n  query TransactionMetricQuery {\n    cards {\n      ...cardAggFields\n    }\n  }\n  ${TransactionAggregationFragment}\n`\n\nconst TransactionMetrics = () => {\n  const classes = useStyles();\n\n  const { loading, error, data } = useQuery(GET_TRANSACTION_METRICS);\n  console.log(\"ðŸš€ ~ file: index.tsx ~ line 29 ~ TransactionMetrics ~ data\", data)\n  if (loading) return (<CardLoader></CardLoader>)\n\n  const { cards } = data\n  const {avgSpend, totalSpend} = cards[0]\n  return (\n    <>\n    <Title>Metrics</Title>\n      <Typography component=\"p\" variant=\"h4\">\n        {totalSpend}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        Total Spend\n      </Typography>\n      <Typography component=\"p\" variant=\"h4\">\n        {avgSpend}\n      </Typography>\n      <Typography color=\"textSecondary\" className={classes.depositContext}>\n        Average Spend\n      </Typography>\n    </>\n  )\n}\nexport default TransactionMetrics","/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/apollo/typepolicies/Cards.ts",["65"],"import moment from 'moment'\n\nexport default function cards() {\n  return {\n    cards: {\n      fields: {\n        totalSpend: {\n          read(totalSpend: number): string {\n            if (!totalSpend) return '-'\n            const dollarAmount: number = (totalSpend / 100)\n            return dollarAmount.toLocaleString(\"en-US\", {style:\"currency\", currency:\"USD\"});\n          }\n        },\n        avgSpend: {\n          read(avgSpend: number): string {\n            if (!avgSpend) return '-'\n            const dollarAmount: number = (avgSpend / 100)\n            return dollarAmount.toLocaleString(\"en-US\", {style:\"currency\", currency:\"USD\"});\n          }\n        }\n      },\n    },\n  };\n}\n","/Users/arjuniyer/Documents/karat/karat-challenge/ui/react-dashboard/src/components/TransactionCategoryChart/index.tsx",["66","67","68","69","70","71"],{"ruleId":"72","replacedBy":"73"},{"ruleId":"74","replacedBy":"75"},{"ruleId":"76","severity":1,"message":"77","line":6,"column":10,"nodeType":"78","messageId":"79","endLine":6,"endColumn":14},{"ruleId":"76","severity":1,"message":"80","line":6,"column":16,"nodeType":"78","messageId":"79","endLine":6,"endColumn":20},{"ruleId":"76","severity":1,"message":"81","line":1,"column":17,"nodeType":"78","messageId":"79","endLine":1,"endColumn":26},{"ruleId":"76","severity":1,"message":"82","line":1,"column":28,"nodeType":"78","messageId":"79","endLine":1,"endColumn":36},{"ruleId":"76","severity":1,"message":"83","line":1,"column":38,"nodeType":"78","messageId":"79","endLine":1,"endColumn":49},{"ruleId":"76","severity":1,"message":"84","line":10,"column":10,"nodeType":"78","messageId":"79","endLine":10,"endColumn":33},{"ruleId":"76","severity":1,"message":"85","line":35,"column":20,"nodeType":"78","messageId":"79","endLine":35,"endColumn":25},{"ruleId":"76","severity":1,"message":"77","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":12},{"ruleId":"76","severity":1,"message":"85","line":28,"column":20,"nodeType":"78","messageId":"79","endLine":28,"endColumn":25},{"ruleId":"76","severity":1,"message":"86","line":1,"column":8,"nodeType":"78","messageId":"79","endLine":1,"endColumn":14},{"ruleId":"76","severity":1,"message":"77","line":2,"column":8,"nodeType":"78","messageId":"79","endLine":2,"endColumn":12},{"ruleId":"76","severity":1,"message":"87","line":4,"column":8,"nodeType":"78","messageId":"79","endLine":4,"endColumn":18},{"ruleId":"76","severity":1,"message":"88","line":55,"column":9,"nodeType":"78","messageId":"79","endLine":55,"endColumn":16},{"ruleId":"76","severity":1,"message":"85","line":57,"column":20,"nodeType":"78","messageId":"79","endLine":57,"endColumn":25},{"ruleId":"76","severity":1,"message":"89","line":62,"column":10,"nodeType":"78","messageId":"79","endLine":62,"endColumn":18},{"ruleId":"76","severity":1,"message":"90","line":62,"column":20,"nodeType":"78","messageId":"79","endLine":62,"endColumn":30},"no-native-reassign",["91"],"no-negated-in-lhs",["92"],"@typescript-eslint/no-unused-vars","'Link' is defined but never used.","Identifier","unusedVar","'List' is defined but never used.","'useEffect' is defined but never used.","'useState' is defined but never used.","'useCallback' is defined but never used.","'useBottomScrollListener' is defined but never used.","'error' is assigned a value but never used.","'moment' is defined but never used.","'Typography' is defined but never used.","'classes' is assigned a value but never used.","'avgSpend' is assigned a value but never used.","'totalSpend' is assigned a value but never used.","no-global-assign","no-unsafe-negation"]